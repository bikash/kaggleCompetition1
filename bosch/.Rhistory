install.packages('xgboost')
install.packages("methods")
install.packages("methods")
install.packages("methods")
install.packages("fread")
install.packages("data.table")
install.packages("fread")
install.packages("methods")
library(data.table)
library(Matrix)
library(caret)
library(xgboost)
setwd("/home/bikash/repos/kaggleCompetition1/bosch/")
### Quick rinse
#Run xgboost on the first [200,000] rows of the numeric data to identify important columns. There is, of course, no guarantee this would always be a good idea, but with this dataset the first chunk of rows seem to be representative.
#Once the numeric data has been read, all the values are offset by +2 to allow the na's to be set to zero.
dt <- fread("data/train_numeric.csv",
drop = "Id",
nrows = 200000,
showProgress = F)
Y  <- dt$Response
dt[ , Response := NULL]
for(col in names(dt)) set(dt, j = col, value = dt[[col]] + 2)
for(col in names(dt)) set(dt, which(is.na(dt[[col]])), col, 0)
X <- Matrix(as.matrix(dt), sparse = T)
rm(dt)
folds <- createFolds(as.factor(Y), k = 6)
valid <- folds$Fold1
model <- c(1:length(Y))[-valid]
param <- list(objective = "binary:logistic",
eval_metric = "auc",
eta = 0.01,
base_score = 0.005,
col_sample = 0.5)
dmodel <- xgb.DMatrix(X[model,], label = Y[model])
dvalid <- xgb.DMatrix(X[valid,], label = Y[valid])
m1 <- xgb.train(data = dmodel, param, nrounds = 20,
watchlist = list(mod = dmodel, val = dvalid))
imp <- xgb.importance(model = m1, feature_names = colnames(X))
library(ggplot2)
set.seed(45)
df <- data.frame(x=rep(1:5, 9), val=sample(1:100, 45),
variable=rep(paste0("category", 1:9), each=5))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=variable))
head(df)
library(ggplot2)
set.seed(45)
df <- data.frame(x=rep(1:5, 9), val=sample(1:100, 45),
variable=rep(paste0("category", 1:9), each=5))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=variable))
sample(1:100, 45)
set.seed(45)
df <- data.frame(x=rep(c(50,100,150,200), 3), val=sample(1:100, 45),
variable=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=variable))
library(ggplot2)
set.seed(45)
df <- data.frame(x=rep(c(50,100,150,200), 3), val=sample(1:100, 12),
variable=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=variable))
set.seed(45)
df <- data.frame(x=rep(c(50,100,150,200), 3), val=sample(1:100, 12),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=variable))
set.seed(45)
df <- data.frame(x=rep(c(50,100,150,200), 3), val=sample(1:100, 12),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method))
library(ggplot2)
set.seed(45)
df <- data.frame(x=rep(c(50,100,150,200), 3), val=sample(1:30, 12),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method))
sample(1:30, 12)
library(ggplot2)
set.seed(45)
val =sample(1:30, 12)
val
df <- data.frame(x=rep(c(50,100,150,200), 3), val=val,
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method))
df <- data.frame(x=rep(c(50,100,150,200), 3), val=c(7.06,12.19,18.01,22.0,6.03,13.11,22.03,31.00,4.01,13.09,20.13,26.00),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method))
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method)) + ylab("User Task") + + xlab("New x label")
library(ggplot2)
set.seed(45)
df <- data.frame(x=rep(c(50,100,150,200), 3), val=c(7.06,12.19,18.01,22.0,6.03,13.11,22.03,31.00,4.01,13.09,20.13,26.00),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method)) + ylab("Total cost") + + xlab("Arrival rate ")
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method)) +
labs(x="Arrival rate",y="Total cost")
df <- data.frame(x=rep(c(50,100,150,200), 3), val=c(7.06,12.19,18.01,21.0,6.03,13.11,22.03,31.00,4.01,13.09,20.13,26.00),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method)) +
labs(x="Arrival rate",y="Total resource cost")
df <- data.frame(x=rep(c(50,100,150,200), 3), val=c(7.06,12.19,18.01,21.0,6.03,13.11,22.03,31.00,4.01,13.09,20.13,26.00),
method=rep(c("Nash Method","Static Allocation","Greedy Approach"), each=4))
# plot
ggplot(data = df, aes(x=x, y=val)) + geom_line(aes(colour=method)) +
labs(x="Arrival rate",y="Average waiting time")
